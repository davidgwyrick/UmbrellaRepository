%%%%  rates_ModRates.m  30 June 2004  BCWT%%%%  This is to look at the rates we are thinking of using at mulitple% levels of XB stiffnesses.  To begin to analyze how charateristics% of the rates change iwth with XB stiffness.% We will analyze a range of kXB from 0.1 to 10 pN/nm% ------------------------------------------------------cleartic%addpath('C:\BertFiles')% Set up the scalers to be multipled on the basal XB stiffnesskxscaler = [0.1, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5, 5, 5.5, 6, 6.5, 7, 7.5, 8, 8.5, 9, 9.5, 10.0];% K IS FOR SPRING CONSTANT, ALL IN pN / nm% KXB = 1; % 1 pN/nm;% outline the fraction multipliers to be used when creating the free energy% drops in the the free energy diagrams.  This will then be used as% efficienies and fraction of free energy differences.eta = 0.5; % The mechanical efficiency fraction for the total amount of work performed.f1 = 0.2; % The fraction drop from the first energy to the second minimum% f2 = eta - f1; % To complete the balance of drop from second E min. to the 3rd E min.%%%% % These will be used by the DooItRates.m%% Parameters for k20y0=20; % OffsetSlopeL=-100; %Slope of line left of 0SlopeR=20; % Slope of line right of 0xL=-1; % xposition left of 0;xR=1; % xposition right of 0;yL=SlopeL*xL + y0; % yposition left of 0;yR=SlopeR*xR + y0; % yposition right of 0;%So, we will have two parameters, m and A;%These have been developed from Mathmatica for the %solution of two systems of equations one with xL and yL% and one with xR and yR, where x and y appear below:%sqrt(A*(x^2)) + m*x + y0 = ym=(-y0 + yR - (0.5*sqrt( ((xL*(y0-yR)-xR*(y0-yL))/xL)^2 )))/xR;A=((xL*(y0-yR)-xR*(y0-yL))^2)/(4*(xL^2)*(xR^2));AA=1;   %% k12 offsetBB=A;   %% k20 ???CC=m;   %% k20 ???DD=y0;  %% k20 offset--right?ATP=5e-3; 		%  Intracellular ATP in MolarADP=30e-6;		%  Intracellular ADP in Molarphos=3e-3;		%  Intracellular Pi in MolarJ2pNnm=1e21;kCal2Joule=4.1868e3;N_Avo=6.022e23;% Gnot = 13*4.1868e3*1e21/6.022e23; % 13 kCal/mol (E of hyrolysis of ATP) * kCal2Joule * J2pNnm / N_Avagadro's (molecules/mol)% % Gnot then becomes free energy of hydrolysis in pN*nm from the above lineGnot=13*kCal2Joule; % Gnot of ATP hydrolysis in Joule/molT=273.15+15; % Temperature in KJ2RT=1/(8.314*T); %To convert J/mol to units of RT [R=8.314 J/(mol K) ]GnotRT=Gnot*J2RT %Gnot in units of RT ~ 21dGtot=-GnotRT-log(ATP/(ADP*phos)); %Total free energy drop from the % hydrolysis and concentration changes in units of RTBridgeNRG=abs(eta*dGtot); % The total amount of energy allowed for the XB displacement% givent he efficiency term on the total free energy available.  In units% of RT.RTnm2 = 8.314*T*J2pNnm/N_Avo; %  to convert RT/nm^2 into pN/nm, such that 1 RT/nm^2 =~ 4 pN/nm @ 310KkRT = kxscaler/RTnm2; % cross brige spring constant in RT/nm^2reach = sqrt(BridgeNRG./kRT); % The cross-brige reach, in nm%%% ______________________________________________________________________%%% ________________________________ OLD CODE ____________________________%kRT = kxscaler*0.2416; 		%  cross bridge spring constant in RT/nm^2--set for 1pN/nm for KXB%RTnm2 = 4.14;       %  to convert RT/nm^2 into pN/nm, such that 1 RT/nm^2 = 4 pN/nm%KXB  = kRT*RTnm2;  %  kRT*RTnm2 is 1 pN/nm%bridgenrg = 46.61;%reach = sqrt(bridgenrg./KXB); %phos = 0.003;		%  Intracellular Pi%%%% ----------------------------------------------------------------------%%%% ----------------------------------------------------------------------%%function [k01,k10,k12,k21,k20,k02] = krates(xin,reach,kRT,phos)% given our list of scalars, we can now make Matlab produce a matrix% of many different stiffnesses over a range of position (x)% The top part is the old rate constants:%%%___________________________ Old Rate Constants _________________________%xin=-20:0.01:20;  % define position vectorxin=-5:0.01:15;  % define position vectorj=length(kxscaler);for i=1:length(xin)    G0(i,1:j) = 0.0;    G1(i,1:j) = -4.3 + kRT.*( (xin(i) - reach).^2);    G2(i,1:j) = -4.3 + kRT.*(xin(i)^2) + log(0.000189*phos);    k01(i,1:j) = 2*1000.0*sqrt(kRT/(2.0*pi)).*exp(-kRT.*((xin(i) - reach).^2)/2.0);    k10(i,1:j) = k01(i,1:j).*exp(G1(i,1:j) - G0(i,1:j));    k12(i,1:j) = (100.0 + 500.0*exp(-1.0*xin(i) ))*1.0;    %k12 = 1*(1000.0 + 5000.0*exp(-1.0*xin));    k21(i,1:j) = k12(i,1:j).*exp(G2(i,1:j) - G1(i,1:j));    if (xin(i) >= 0.0) k20(i,1:j) = 2.0*xin(i); else k20(i,1:j) = -100.0*xin(i); end    %k20 = 100*k20;    %k20 = 10*k20;  %Working this into the offrate if     %k02=k20.*exp(G0-G2);    k02(i,1:j) = 0.0;	    end%%%________________________________________________________________________%%_________________________________________________________________________%% Now Run the new rate constants:%%___________________________New Rate Constants _________________________%%%%%%% AA=200;% BB=500;% CC=9;% DD=100;% AA=200;% BB=500;% CC=9;% DD=100;% % %% All looking into k20% y0=20; % Offset% SlopeL=-100;% SlopeR=20;% xL=-1;% xR=1;% yL=SlopeL*xL + y0;% yR=SlopeR*xR + y0;% %So, we will have two parameters, m and A;% %These have been developed from Mathmatica for the % %solution of two systems of equations one with xL and yL% % and one with xR and yR, where x and y appear below:% %Sqrt(A*(x^2)) + m*x + y0 = y% m=(-y0 + yR - (0.5*sqrt( ((xL*(y0-yR)-xR*(y0-yL))/xL)^2 )))/xR;% A=((xL*(y0-yR)-xR*(y0-yL))^2)/(4*(xL^2)*(xR^2));% %Awow=(xL*(y0-yR)-xR*(y0-yL))/(2*xL*xR);% m, A%%%%%%%%%%%%%xin=-5:0.01:15;  % define position vectorj=length(kxscaler);for i=1:length(xin)     G0_N(i,1:j) = 0.0;     G1_N(i,1:j) = f1*dGtot + kRT.*( (xin(i) - reach).^2);     G2_N(i,1:j) = eta*dGtot + kRT.*(xin(i)^2);     G0P_N(i,1:j) = G0_N(i,1:j) + dGtot; % G0 Prime, for the next ATP to come on.%     G2_N(i,1:j) = eta*dGtot + (f2/eta)*kRT.*(xin(i)^2); % Take this out, so%     that we are not forcing the width of the G2 parabola.%% Note that k01 and k12 were not changed     k01newRT(i,1:j) = 2000.0*sqrt(kRT/(2.0*pi)).*exp(-kRT.*((xin(i) - reach).^2)/2.0);     k10newRT(i,1:j) = k01newRT(i,1:j).*exp(G1_N(i,1:j) - G0_N(i,1:j));%     k12(i,1:j) = (100.0 + 500.0*exp(-1.0*xin(i) ))*1.0;     k12newRT(i,1:j) = AA + (100./sqrt(kRT)).*(1-tanh(sqrt(kRT).*(xin(i)-reach)));% %    k12new(i,1:j) = (100./kxscaler).*(1-tanh(kxscaler.*(xin(i)-reach)));%     %k12 = 1*(1000.0 + 5000.0*exp(-1.0*xin));%      %k21(i,1:j) = k12(i,1:j).*exp(G2(i,1:j) - G1(i,1:j));     k21newRT(i,1:j) = k12newRT(i,1:j).*exp(G2_N(i,1:j) - G1_N(i,1:j));     k20newRT(i, 1:j) = sqrt(kRT).*(sqrt(A*(xin(i)*xin(i))) + m*xin(i)) + y0;%k20newRT(i, 1:j) = sqrt(kRT).*((-Awow)*sqrt((xin(i)*xin(i))) + m*xin(i) + y0);      %      k20 = 10*k20;  %Working this into the offrate if %     %k02=k20.*exp(G0-G2);     %k02newRT(i,1:j) = k20newRT(i,1:j).*exp(G0(i,1:j) - G2(i,1:j));	          k02newRT(i,1:j) = k20newRT(i,1:j).*exp( (G0_N(i,1:j)- G2_N(i,1:j)) + dGtot);  % Including the      % dGtot that is used up for hydrolysis.end%%%%%%%%%%%%%%%%%%%%%%%%%%%% Plot the Free Energy transitions:% % Plot some of the Old Energies:% % We will include the G0Prime_new, as the delta G total% i=find(kxscaler==1);% clf(figure(1))% plot(xin, G0(:, i), xin, G1(:,i), xin, G2(:,i), xin, G0P_N(:, i))% xlabel('x (nm)')% ylabel('Free Energy (RT)')% title(['New Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])% axis([min(xin) max(xin) -35 0])% legend('G0', 'G1', 'G2', 'G0P_N',4);% % i=find(kxscaler==5);% clf(figure(2))% plot(xin, G0(:, i), xin, G1(:,i), xin, G2(:,i), xin, G0P_N(:, i))% xlabel('x (nm)')% ylabel('Free Energy (RT)')% title(['Old Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])% axis([min(xin) max(xin) -35 0])% legend('G0', 'G1', 'G2', 'G0P_N',4);% % % Plot some of the New Energies:% i=find(kxscaler==1);% clf(figure(3))% plot(xin, G0_N(:, i), xin, G1_N(:,i), xin, G2_N(:,i), xin, G0P_N(:, i))% xlabel('x (nm)')% ylabel('Free Energy (RT)')% title(['New Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])% axis([min(xin) max(xin) -35 0])% legend('G0_N', 'G1_N', 'G2_N','G0P_N', 4);% % i=find(kxscaler==1);% clf(figure(4))% plot(xin, G0_N(:, i), xin, G1_N(:,i), xin, G2_N(:,i), xin, G0P_N(:, i))% xlabel('x (nm)')% ylabel('Free Energy (RT)')% title(['New Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])% axis([min(xin) max(xin) -35 0])% legend('G0_N', 'G1_N', 'G2_N','G0P_N', 4);% %%%%%%%%%%%%%%%%%%% Condense into subplot:clf(figure(5))% Try to put the 4 plots from above onto the subplot?% First the Old.i=find(kxscaler==1);subplot(2,2,1)plot(xin, G0(:, i), xin, G1(:,i), xin, G2(:,i), xin, G0P_N(:, i))xlabel('x (nm)')ylabel('Free Energy (RT)')title(['Old Gs, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -35 0])legend('G0', 'G1', 'G2','G0P_N', 4);i=find(kxscaler==5);subplot(2,2,2)plot(xin, G0(:, i), xin, G1(:,i), xin, G2(:,i), xin, G0P_N(:, i))xlabel('x (nm)')ylabel('Free Energy (RT)')title(['Old Gs, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -35 0])legend('G0', 'G1', 'G2','G0P_N', 4);% Now the Newi=find(kxscaler==1);subplot(2,2,3)plot(xin, G0_N(:, i), xin, G1_N(:,i), xin, G2_N(:,i), xin, G0P_N(:, i))xlabel('x (nm)')ylabel('Free Energy (RT)')title(['New Gs, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -35 0])legend('G0_N', 'G1_N', 'G2_N','G0P_N', 4);i=find(kxscaler==5);subplot(2,2,4)plot(xin, G0_N(:, i), xin, G1_N(:,i), xin, G2_N(:,i), xin, G0P_N(:, i))xlabel('x (nm)')ylabel('Free Energy (RT)')title(['New Gs, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -35 0])legend('G0_N', 'G1_N', 'G2_N','G0P_N', 4);%%%%%%%%%%%%%%%%%%%%%%%% Now plot some forward/reverse transition rates:%%%%%%%%%%%%%%%%%%%%%%%% State 0--> State 1, k01 and k10clf(figure(6))i=find(kxscaler==5);subplot(2,2,1)plot(xin, k01(:, i), xin, k10(:,i))xlabel('x (nm)')ylabel('rate (s^-^1)')title(['Old Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01', 'k10', 1);i=find(kxscaler==1);subplot(2,2,2)plot(xin, k01newRT(:,i), xin, k10newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01newRT', 'k10newRT', 1);i=find(kxscaler==5);subplot(2,2,3)plot(xin, k01newRT(:,i), xin, k10newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01newRT', 'k10newRT', 1);i=find(kxscaler==10);subplot(2,2,4)plot(xin, k01newRT(:,i), xin, k10newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01newRT', 'k10newRT', 1);%%%%%%%%%%%%%%%%%%%%%%%% Now plot some forward/reverse transition rates:%%%%%%%%%%%%%%%%%%%%%%%% State 1--> State 2, k12 and k21clf(figure(7))i=find(kxscaler==5);subplot(2,2,1)plot(xin, k12(:, i), xin, k21(:,i))xlabel('x (nm)')ylabel('rate (s^-^1)')title(['Old Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k12', 'k21', 1);i=find(kxscaler==1);subplot(2,2,2)plot(xin, k12newRT(:,i), xin, k21newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k12newRT', 'k21newRT', 1);i=find(kxscaler==5);subplot(2,2,3)plot(xin, k12newRT(:,i), xin, k21newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k12newRT', 'k21newRT', 1);i=find(kxscaler==10);subplot(2,2,4)plot(xin, k12newRT(:,i), xin, k21newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k12newRT', 'k21newRT', 1);%%%%%%%%%%%%%%%%%%%%%%%% Now plot some forward/reverse transition rates:%%%%%%%%%%%%%%%%%%%%%%%% State 2--> State 0, k20 and k02clf(figure(8))i=find(kxscaler==5);subplot(2,2,1)plot(xin, k20(:, i), xin, k02(:,i))xlabel('x (nm)')ylabel('rate (s^-^1)')title(['Old Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k20', 'k02', 1);i=find(kxscaler==1);subplot(2,2,2)plot(xin, k20newRT(:,i), xin, k02newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k20newRT', 'k02newRT', 1);i=find(kxscaler==5);subplot(2,2,3)plot(xin, k20newRT(:,i), xin, k02newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k20newRT', 'k02newRT', 1);i=find(kxscaler==10);subplot(2,2,4)plot(xin, k20newRT(:,i), xin, k02newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k20newRT', 'k02newRT', 1);clf(figure(9)) %i=find(kxscaler==5);% %% Write ASCII File% RatesHeader=sprintf('%6s\t','x (nm)', 'G1(x)RT', 'G2(x)RT','G3(x)RT','GatpRT','kx12','kx21','kx23','kx32','kx31','kx13');% DataOut=[xin', G0_N(:, i), G1_N(:,i), G2_N(:,i), G0P_N(:, i), k01newRT(:,i), k10newRT(:,i),k12newRT(:,i),k21newRT(:,i), k20newRT(:,i),k02newRT(:,i)];% %FormatData% [r,c]=size(DataOut);% FormatString=[];% for i=1:c-1%     FormatString=[FormatString, '%6.4g\t'];% end% FormatString=[FormatString, '%6.4g\n'];% WriteTextFile('TransitionRates_kxb5pNnm.txt', DataOut, 'w', RatesHeader, FormatString)subplot(2,2,1)plot(xin, G0_N(:, i), xin, G1_N(:,i), xin, G2_N(:,i), xin, G0P_N(:, i))xlabel('x (nm)')ylabel('Free Energy (RT)')title(['New Gs, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -35 0])legend('G0_N', 'G1_N', 'G2_N','G0P_N', 4);subplot(2,2,2)plot(xin, k01newRT(:,i), xin, k10newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01newRT', 'k10newRT', 1);subplot(2,2,3)plot(xin, k12newRT(:,i), xin, k21newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k12newRT', 'k21newRT', 1);subplot(2,2,4)plot(xin, k20newRT(:,i), xin, k02newRT(:,i) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k20newRT', 'k02newRT', 1);clf(figure(10))  % Plot the ratio of low F and high Fi=find(kxscaler==5);subplot(1,2,1)plot(xin, k12newRT(:,i), 'k-', xin, k21newRT(:,i), 'k-.' )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k12newRT', 'k21newRT', 1);subplot(1,2,2)plot(xin, k12newRT(:,i)./k21newRT(:,i), 'k:', xin, k21newRT(:,i)./k12newRT(:,i), 'k-')xlabel('x (nm)')ylabel('rate (s^-^1)')title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 100])legend('k12newRT/k21newRT', 'k21newRT/k12newRT', 1);break% % i=find(kxscaler==1);% clf(figure(2))% plot(xin, k12(:, i), xin, k12newRT(:,i), xin, k21newRT(:,i), xin, k01(:,i) )% xlabel('x (nm)')% ylabel('rate (s^-^1)')% title(['Transition Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])% axis([min(xin) max(xin) 0 1000])% legend('k12', 'k12newRT', 'k21newRT', 'k01',1);% % i=find(kxscaler==10);% clf(figure(3))% plot(xin, k12(:, i), xin, k12newRT(:,i), xin, k21newRT(:,i), xin, k01(:,i) )% xlabel('x (nm)')% ylabel('rate (s^-^1)')% title(['Transition Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])% axis([min(xin) max(xin) 0 1000])% legend('k12', 'k12newRT', 'k21newRT', 'k01', 1);i=find(kxscaler==5);clf(figure(1))plot(xin, k20(:, i), xin, k20newRT(:,i), xin, k02newRT(:,1) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['Transition Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])%axis([min(xin) max(xin) -20 1000])legend('k20', 'k20newRT','k02newRT', 1);i=find(kxscaler==1);clf(figure(2))plot(xin, k20(:, i), xin, k20newRT(:,i), xin, k02newRT(:,1) )xlabel('x (nm)')ylabel('rate (s^-^1)')title(['Transition Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])%axis([min(xin) max(xin) -20 1000])legend('k20', 'k20newRT','k02newRT', 1);i=find(kxscaler==1);clf(figure(2))plot(xin, G1(:, i), xin, G2(:,i), xin, G0(:,i))xlabel('x (nm)')ylabel('G1')title(['Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -20 0])legend('G1', 'G2', 'G0', 4);breaki=find(kxscaler==10);clf(figure(3))plot(xin, G1(:, i), xin, G2(:,i), xin, G0(:,i))xlabel('x (nm)')ylabel('G1')title(['Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -20 0])legend('G1', 'G2', 'G0', 4);%%% ________ Plot some free energies in 3d or just 2d% Now that we have our data it has length(factors) rows and% length(kxscalar) col.  This can now be plotted on the contour plot.clf(figure(7))set(gcf, 'renderer', 'zbuffer')%mesh(kxscaler, log10(factors)', data)mesh(kxscaler, xin, G1)xlabel('k_x_b, (pN/nm)')ylabel('x (nm)')zlabel('G1')title(['Free Energy Well for G1 ' date])%axis([0 max(kxscaler) min(xin) max(xin) -20 0])% Now that we have our data it has length(factors) rows and% length(kxscalar) col.  This can now be plotted on the contour plot.clf(figure(8))set(gcf, 'renderer', 'zbuffer')%mesh(kxscaler, log10(factors)', data)mesh(kxscaler, xin, G2)xlabel('k_x_b, (pN/nm)')ylabel('x (nm)')zlabel('G2')title(['Free Energy Well for G2 ' date])%axis([0 max(kxscaler) min(xin) max(xin) -20 0])i=find(kxscaler==5);clf(figure(1))plot(xin, G1(:, i), xin, G2(:,i), xin, G0(:,i) )xlabel('x (nm)')ylabel('G1')title(['Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -20 0])legend('G1', 'G2', 'G0', 4);i=find(kxscaler==1);clf(figure(2))plot(xin, G1(:, i), xin, G2(:,i), xin, G0(:,i))xlabel('x (nm)')ylabel('G1')title(['Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -20 0])legend('G1', 'G2', 'G0', 4);i=find(kxscaler==10);clf(figure(3))plot(xin, G1(:, i), xin, G2(:,i), xin, G0(:,i))xlabel('x (nm)')ylabel('G1')title(['Free Energy Well for G1 and G2, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) -20 0])legend('G1', 'G2', 'G0', 4);%%% _________________________ Plot some associated transition rates at a%%% given stiffness.i=find(kxscaler==5);clf(figure(3))plot(xin, k01(:, i), xin, k10(:,i), xin, k12(:,i), xin, k21(:,i), xin, k20(:,i), xin, k02(:,i) )xlabel('x (nm)')ylabel('k_rate (s^-^1)')title(['State Transition Rates , kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01', 'k10', 'k12', 'k21', 'k20', 'k02', 0)breaki=find(kxscaler==1);clf(figure(4))plot(xin, k01(:, i), xin, k10(:,i), xin, k12(:,i), xin, k21(:,i), xin, k20(:,i), xin, k02(:,i) )xlabel('x (nm)')ylabel('k_rate (s^-^1)')title(['State Transition Rates , kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01', 'k10', 'k12', 'k21', 'k20', 'k02', 0)i=find(kxscaler==10);clf(figure(5))plot(xin, k01(:, i), xin, k10(:,i), xin, k12(:,i), xin, k21(:,i), xin, k20(:,i), xin, k02(:,i) )xlabel('x (nm)')ylabel('k_rate (s^-^1)')title(['State Transition Rates , kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01', 'k10', 'k12', 'k21', 'k20', 'k02', 0)%%%----Plot rates in 3dclf(figure(7))set(gcf, 'renderer', 'zbuffer')%mesh(kxscaler, log10(factors)', data)mesh(kxscaler, xin, k01)xlabel('k_x_b, (pN/nm)')ylabel('x (nm)')zlabel('k01')title(['Rate k01 ' date])axis([0 max(kxscaler) -5 max(xin) 0 1000])%%%%______________________________________________%%%%______________________________________________%%% k01--%%%%______________________________________________clf(figure(16))set(gcf, 'Name', 'Unbound--->Pre Power Stroke' )i=find(kxscaler==1);subplot(2,2,1)plot(xin, k01(:, i), 'k--', xin, k01newRT(:,i), 'k-', 'LineWidth', 3)xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k01--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01_O_L_D', 'k01_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==1);subplot(2,2,2)plot(xin, k10(:,i), 'k--', xin, k10newRT(:,i), 'k-', 'LineWidth', 3 )xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k10--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k10_O_L_D', 'k10_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==5);subplot(2,2,3)plot(xin, k01(:, i), 'k--', xin, k01newRT(:,i), 'k-', 'LineWidth', 3)xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k01--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k01_O_L_D', 'k01_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==5);subplot(2,2,4)plot(xin, k10(:,i), 'k--', xin, k10newRT(:,i), 'k-', 'LineWidth', 3 )xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k10--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k10_O_L_D', 'k10_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')%%%%______________________________________________%%%%______________________________________________%%% k12--%%%%______________________________________________clf(figure(17))set(gcf, 'Name', 'Pre Power Stroke--->Post Power Stroke' )i=find(kxscaler==1);subplot(2,2,1)plot(xin, k12(:, i), 'k--', xin, k12newRT(:,i), 'k-', 'LineWidth', 3)xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k12--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k12_O_L_D', 'k12_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==1);subplot(2,2,2)plot(xin, k21(:,i), 'k--', xin, k21newRT(:,i), 'k-', 'LineWidth', 3 )xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k21--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k21_O_L_D', 'k21_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==5);subplot(2,2,3)plot(xin, k12(:, i), 'k--', xin, k12newRT(:,i), 'k-', 'LineWidth', 3)xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k12--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k12_O_L_D', 'k12_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==5);subplot(2,2,4)plot(xin, k21(:,i), 'k--', xin, k21newRT(:,i), 'k-', 'LineWidth', 3 )xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k21--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k21_O_L_D', 'k21_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')%%%%______________________________________________%%%%______________________________________________%%% k20--%%%%______________________________________________clf(figure(18))set(gcf, 'Name', 'Post Power Stroke--->Unbound' )i=find(kxscaler==1);subplot(2,2,1)plot(xin, k20(:, i), 'k--', xin, k20newRT(:,i), 'k-', 'LineWidth', 3)xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k20--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k20_O_L_D', 'k20_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==1);subplot(2,2,2)plot(xin, k02(:,i), 'k--', xin, k02newRT(:,i), 'k-', 'LineWidth', 3 )xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k02--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k02_O_L_D', 'k02_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==5);subplot(2,2,3)plot(xin, k20(:, i), 'k--', xin, k20newRT(:,i), 'k-', 'LineWidth', 3)xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k20--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k20_O_L_D', 'k20_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')i=find(kxscaler==5);subplot(2,2,4)plot(xin, k02(:,i), 'k--', xin, k02newRT(:,i), 'k-', 'LineWidth', 3 )xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('rate (s^-^1)','Fontsize', 30, 'FontName', 'Times New Roman')title(['k02--kXB=' num2str(kxscaler(i)) 'pN/nm, ' date])axis([min(xin) max(xin) 0 1000])legend('k02_O_L_D', 'k02_N_E_W', 1);legend(gca,'boxoff')set(gca, 'Box', 'Off')set(gca, 'Fontsize', 20, 'Fontweight', 'bold')%%%% Polish up figure 9clf(figure(11)) %i=find(kxscaler==5);subplot(2,2,1)plot(xin, G0_N(:, i), 'k-', xin, G1_N(:,i), 'k-', xin, G2_N(:,i), 'k-', xin, G0P_N(:, i), 'k-', 'LineWidth', 2)xlabel('x (nm)','Fontsize', 30, 'FontName', 'Times New Roman')ylabel('Free Energy (RT)','Fontsize', 30, 'FontName', 'Times New Roman')title(['New Gs, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date], 'FontName', 'Times New Roman', 'FontSize', 30)axis([min(xin) max(xin) -35 1])legend('G0_N', 'G1_N', 'G2_N','G0P_N', 4);set(gca, 'Fontsize', 20, 'Fontweight', 'bold')set(gca, 'Box', 'off')subplot(2,2,2)plot(xin, k01newRT(:,i), 'k-', xin, k10newRT(:,i), 'k--', 'LineWidth', 2 )xlabel('x (nm)', 'FontName', 'Times New Roman', 'FontSize', 30)ylabel('rate (s^-^1)', 'FontName', 'Times New Roman', 'FontSize', 30)%title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date], 'FontName', 'Times New Roman', 'FontSize', 30)axis([min(xin) max(xin) 0 1000])legend('k01newRT', 'k10newRT', 1);set(gca, 'Fontsize', 20, 'Fontweight', 'bold')set(gca, 'Box', 'off')subplot(2,2,3)plot(xin, k12newRT(:,i), 'k-',xin, k21newRT(:,i), 'k--', 'LineWidth', 2 )xlabel('x (nm)', 'FontName', 'Times New Roman', 'FontSize', 30)ylabel('rate (s^-^1)', 'FontName', 'Times New Roman', 'FontSize', 30)title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date], 'FontName', 'Times New Roman', 'FontSize', 30)axis([min(xin) max(xin) 0 1000])legend('k12newRT', 'k21newRT', 1);set(gca, 'Fontsize', 20, 'Fontweight', 'bold')set(gca, 'Box', 'off')subplot(2,2,4)plot(xin, k20newRT(:,i), 'k-', xin, k02newRT(:,i), 'k--', 'LineWidth', 2 )xlabel('x (nm)', 'FontName', 'Times New Roman', 'FontSize', 30)ylabel('rate (s^-^1)', 'FontName', 'Times New Roman', 'FontSize', 30)%title(['New Rates, kXB=' num2str(kxscaler(i)) 'pN/nm, ' date], 'FontName', 'Times New Roman', 'FontSize', 30)axis([min(xin) max(xin) 0 1000])legend('k20newRT', 'k02newRT', 1);set(gca, 'Fontsize', 20, 'Fontweight', 'bold')set(gca, 'Box', 'off')